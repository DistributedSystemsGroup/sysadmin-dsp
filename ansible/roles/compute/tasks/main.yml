---
- name: configure bonding module options
  copy: src=bonding_opts.conf dest=/etc/modprobe.d/bonding.conf owner=root group=root

- name: install ifenslave
  apt: name=ifenslave state=present

- name: Install Ubuntu cloud keys package
  apt: name=ubuntu-cloud-keyring

- name: Remove Pike Ubuntu cloud repository
  apt_repository: repo='deb http://ubuntu-cloud.archive.canonical.com/ubuntu xenial-updates/pike main' filename=pike state=absent update_cache=yes
- name: Add Pike Ubuntu cloud repository
  apt_repository: repo='deb http://ubuntu-cloud.archive.canonical.com/ubuntu xenial-updates/queens main' filename=openstack state=present update_cache=yes

- name: format VM storage
  filesystem: dev={{ nova_storage_device }} fstype=ext4

- name: mount VM storage space and add it to fstab
  mount: fstype=ext4 path=/var/lib/nova src={{ nova_storage_device }} state=mounted

- name: set permissions on nova mountpoint
  file: path=/var/lib/nova owner=nova group=nova mode=0755 state=directory

- name: install nova-compute package
  apt: name={{ item }}
  with_items:
    - nova-compute
    - sysfsutils

- name: Disable rp filters
  sysctl: name={{ item }} value=0 state=present
  with_items:
    - net.ipv4.conf.all.rp_filter
    - net.ipv4.conf.default.rp_filter
- name: Install neutron compute packages
  apt: name={{ item }}
  with_items:
    - neutron-plugin-ml2
    - neutron-linuxbridge-agent

- name: Copy neutron.conf file
  template: src=neutron.conf dest=/etc/neutron/neutron.conf owner=root group=neutron mode=0640
  notify:
    - restart neutron-linuxbridge-agent
- name: Copy linuxbridge_agent.ini file
  template: src=linuxbridge_agent.ini dest=/etc/neutron/plugins/ml2/linuxbridge_agent.ini owner=root group=neutron mode=0640
  notify:
    - restart neutron-linuxbridge-agent

- name: install nova.conf file
  template: src=nova.conf dest=/etc/nova/nova.conf owner=nova group=nova mode=0640
  notify:
    - restart nova-compute

- name: delete Ubuntu Nova package sqlite database
  file: path=/var/lib/nova/nova.sqlite state=absent

- name: let the nova user login for migrations
  user: shell=/bin/bash name=nova

- name: install ssh public key for nova
  authorized_key: user=nova key='{{ item }}'
  with_file:
    - id_rsa.pub

- name: install private key
  copy: src=id_rsa dest=/var/lib/nova/.ssh/id_rsa owner=nova group=nova mode=0600

- name: install public key
  copy: src=id_rsa.pub dest=/var/lib/nova/.ssh/id_rsa.pub owner=nova group=nova mode=0644

- name: disable strict host checking for nova user ssh
  lineinfile: path=/var/lib/nova/.ssh/config owner=nova group=nova mode=0600 line='StrictHostKeyChecking no' create=yes

- name: reset permissions on nova mountpoint
  file: path=/var/lib/nova owner=nova group=nova recurse=yes

- name: install deps for zabbix monitoring tool
  apt: name={{ item }} state=present
  with_items:
    - ksh
    - libxml2-utils
    - git

- name: clone git repo for virbix
  git:
    repo: 'https://github.com/sergiotocalini/virbix.git'
    dest: /usr/src/virbix
    version: d5c7ac0309592fa18f90799b2d5b4615a1bc0b77

- name: run virbix installation script
  command: /usr/src/virbix/deploy_zabbix.sh
  
