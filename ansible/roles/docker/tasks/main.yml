---
- lvg: vg=docker pvs=/dev/{{ docker_device }} state=present
  when: docker_device is defined
- lvol: vg=docker lv=lvol0 size=100%VG state=present
  when: docker_device is defined
- filesystem: fstype=ext4 dev=/dev/mapper/docker-lvol0
  when: docker_device is defined
- mount: state=mounted name=/mnt/docker src=/dev/mapper/docker-lvol0 fstype=ext4
  when: docker_device is defined
- name: Install Docker Registry certificate
  file: state=directory path=/etc/docker/certs.d/docker-registry:5000
- file: state=link src=/mnt/cephfs/docker-volumes/docker-registry-certs/docker-registry.crt path=/etc/docker/certs.d/docker-registry:5000/ca.crt
- name: Bring up the network interface for Docker traffic
  command: ifup {{ docker_network_iface }}
  when: docker_network_iface is defined
- name: Copy configuration file
  template: src=docker.conf dest=/etc/default/docker
  when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "14"
  notify:
    - restart docker
- name: Copy configuration file
  template: src=daemon.json dest=/etc/docker/
  notify:
    - restart docker
- name: Install Docker dependencies
  apt: name={{ item }} state=present
  with_items:
    - ca-certificates
    - curl
    - software-properties-common
- name: Install APT key
  apt_key: state=present data="{{ lookup('file', 'apt_repo.key') }}"
- name: Remove old APT repository
  apt_repository: repo='deb http://apt.dockerproject.org/repo ubuntu-trusty main' state=absent update_cache=no
  when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "14"
- name: Install APT repository
  apt_repository: repo='deb [arch=amd64] https://download.docker.com/linux/ubuntu trusty stable' state=present update_cache=yes filename=docker
  when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "14"
- name: Remove old APT repository
  apt_repository: repo='deb http://apt.dockerproject.org/repo ubuntu-xenial main' state=absent update_cache=no
  when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "16"
- name: Install APT repository
  apt_repository: repo='deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable' state=present update_cache=yes filename=docker
  when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "16"
- name: Remove old Docker package
  apt: name=docker-engine state=absent
- name: Install Docker packages
  apt: name=docker-ce=17.09* state=present
- name: Install Flannel
  get_url:
    url: https://github.com/coreos/flannel/releases/download/v0.10.0/flanneld-amd64
    dest: /opt/flanneld-amd64
    mode: 0755
  notify:
    - restart flannel
- name: setup flannel startup via supervisord
  copy: src=flannel.conf dest=/etc/supervisor/conf.d/flannel.conf
  notify:
    - restart flannel-conf
- name: install docker-hostdns
  pip: name=docker-hostdns
- name: setup docker-hostdns startup via supervisord
  copy: src=docker-hostdns.conf dest=/etc/supervisor/conf.d/docker-hostdns.conf

